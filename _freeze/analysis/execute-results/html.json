{
  "hash": "e60bc1a078e0f2101db1e7bc94360e6d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Accessibility of Active Ageing Centre\"\ndate: \"July 1, 2025\"\ndate-modified: \"last-modified\"\nformat:\n html:\n    code-fold: false\n    code-summary: \"Code Chunk\"\n    number-sections: true\nexecute: \n  eval: false #r will run through all codes\n  echo: true #r will display all code chunk\n  warning: false #for markdown\n  freeze: true #r will not render all existing html files\n  message: false #avoid printing warning message\neditor: source\n---\n\n\n\n# Active Ageing Centre\n\n## Overview\n\nThis chapter covers pre-requisite preparation prior to the analysis alongside the analysis and its results.\n\n## Preparation\n\n### Installing Packages\n\n+-------------+-------------------------------------------------------------------------------------------------------------------------+\n| **Package** | **Description**                                                                                                         |\n+=============+=========================================================================================================================+\n| sf          | For importing, managing, and handling geospatial data                                                                   |\n+-------------+-------------------------------------------------------------------------------------------------------------------------+\n| tidyverse   | For non-spatial data wrangling that includes dplyr, tibble, ggplot2, readr, tidyr, stringr, forcats, lubridate and purr |\n+-------------+-------------------------------------------------------------------------------------------------------------------------+\n| SpatialAcc  | For modelling spatial accessibility                                                                                     |\n+-------------+-------------------------------------------------------------------------------------------------------------------------+\n| tmap        | For creating elegent and cartographic quality thematic maps                                                             |\n+-------------+-------------------------------------------------------------------------------------------------------------------------+\n| ggstatsplot | For statistical analysis and plotting                                                                                   |\n+-------------+-------------------------------------------------------------------------------------------------------------------------+\n\n: Table 1: *Files Preparation for QGIS*\n\nThe below code chunk installs and loads the abovementioned packages for this analysis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tidyverse, SpatialAcc, reshape2, tmap, ggplot2, moments)\n```\n:::\n\n\n\n### Importing Data\n\nThe file of the estimated population from 2025 to 2029 together with the hexagon layer is imported.\n\n+----------------+------------------------------------------------------------------------------------------------------------------+\n| **Name**       | **Details**                                                                                                      |\n+----------------+------------------------------------------------------------------------------------------------------------------+\n| `geriesti_hex` | -   Projected population of seniors above 60 years of age from Year 2025 to 2029                                 |\n|                |                                                                                                                  |\n|                | -   Hexagons ID                                                                                                  |\n|                |                                                                                                                  |\n|                | -   Geometies                                                                                                    |\n+----------------+------------------------------------------------------------------------------------------------------------------+\n| `acc_sf`       | -   Active Ageing Centres (AACs)                                                                                 |\n|                |                                                                                                                  |\n|                | -   Postal Codes of Care AACs                                                                                    |\n|                |                                                                                                                  |\n|                | -   Geometries of AACs                                                                                           |\n+----------------+------------------------------------------------------------------------------------------------------------------+\n| `mpsz`         | Singapore Master Plan 2019 Planning Subzone Boundary                                                             |\n+----------------+------------------------------------------------------------------------------------------------------------------+\n| `roadnetwork`  | [Road network of Singapore, Malaysia, Brunei](https://download.geofabrik.de/asia/malaysia-singapore-brunei.html) |\n|                |                                                                                                                  |\n|                | chosen over as data.giv has only road centre line                                                                |\n+----------------+------------------------------------------------------------------------------------------------------------------+\n\n: Table 2: *Files Preparation for QGIS*\n\n#### Singapore Master Plan 2019 Planning Subzone Boundary\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz = st_read(dsn = \"data/planningarea/\",\n               layer = \"mpsz2019\")\n```\n:::\n\n\n\n#### Road Network\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nroadnetwork = st_read(dsn = \"data/roadnetwork/roadnetwork.shp/\",\n               layer = \"gis_osm_roads_free_1\")\n```\n:::\n\n\n\n#### Estimated Senior Population with Hexagons Spatial Dataset\n\nFor the below code chunk, we will first read the spatial dataset, `geriesti_hex` and dropped the irrelevant columns.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngeriesti_hex = read_rds(\"data/rds/mpsz/geriesti_hex_2025.rds\") %>%\n  mutate(sz_upper = toupper(sz)) %>%  # Create uppercase version of sz\n  left_join(\n    mpsz %>% \n      st_drop_geometry() %>%  # Remove geometry to avoid conflicts\n      select(SUBZONE_N, REGION_N) %>%\n      mutate(SUBZONE_N_upper = toupper(SUBZONE_N)),  # Create uppercase version of SUBZONE_N\n    by = c(\"sz_upper\" = \"SUBZONE_N_upper\")\n  ) %>%\n  select(-c('SUBZONE_N.x', 'SUBZONE_N.y', 'subzone_clean', 'SUBZONE_N', 'sz_upper'))\n```\n:::\n\n\n\nFollowing, we use `st_write()` function from the package `sf` to save `geriesti_hex` to a file. it writes into \"data/qgis\" directory, creating a layer named \"geriesti_hex\", and saving it in the ESRI Shapefile format for QGIS later on.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_write(geriesti_hex, dsn = \"data/qgis\", layer = \"geriesti_hex\", driver = \"ESRI Shapefile\")\n```\n:::\n\n\n\n#### Active Ageing Centre (AAC) Spatial Dataset\n\nSimilar to the above code chunk, we will read the spatial dataset, `cc_sf` , then we will filter to AACs only. We will add a new column `capacity` where we will set the demand to 3000 seniors per AAC. Following which dropped the irrelevant columns in addition we use `unnest()` from the `tidyverse` package to convert the care centres column from list to column.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naac_sf = read_rds(\"data/rds/carecentre/refined/cc_sf.rds\") %>%\n  filter(aac == 1) %>%\n  mutate(capacity = 3000) %>%\n  select(-c(postal_found, latitude_wgs84, longitude_wgs84)) %>%\n  unnest(3:11) #converts from list to column\n```\n:::\n\n\n\nThereafter, we will save `cc_sf` to a file for QGIS analysis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_write(aac_sf, dsn = \"data/qgis\", layer = \"aac\", driver = \"ESRI Shapefile\")\n```\n:::\n\n\n\n### Data Preparation using QGIS\n\n#### Step 1: Adding `geriesti_hex` layer\n\nFirstly, locate the file to be be added as a layer. Then, drag and drop the file into the empty white space. The layer will appear as shown below.\n\n![Figure 1: *Adding `geriesti_hex` layer*](analysis_images/1.png)\n\n#### Step 2: Ensuring Correct CRS\n\nWe will right click on the `geriesti_hex` layer and click onto `Properties`.\n\n![Figure 2: Properties Panel](analysis_images/2.png)\n\nIn the below picture, we can see that the correct CRS (EPSG: 3414 - SVY21 / Singapore TM) is assigned.\n\n![Figure 3: Checking CRS](analysis_images/3.png)\n\n#### Step 3: Adding Road Network Layer\n\nSimilar to Step 1, we will drag and drop the `gis_osm_roads_free_1.shp` into the layer.\n\n![Figure 4: *Adding Road Network Layer*](analysis_images/4.png)\n\n#### Step 4: Adding Master Plan Subzone Boundary\n\nSimilar to Step 1, we will drag and drop the `mpsz2019.shp` into the layer.\n\n![Figure 5: *Adding `mpsz2019`* *Layer*](analysis_images/5.png)\n\n#### Step 5: Clipping Road Network\n\nAs the road network layer consists of the Singapore, Malaysia and Brunei, we would need to clip it to only Singapore's roads. We select `Vector -> Geoprocessing Tools -> Clip`.\n\n![Figure 6: *Clipping Function*](analysis_images/6.png)\n\nThe input layer will be `gis_osm_roads_free_1` while the overlay layer is `mpsz2019`. This ensures that the `gis_osm_roads_free_1` is trimmed according to the boundaries of Singapore, alias `mpsz2019`. We will click onto the tool button.\n\n![Figure 7: *Parameters of Clipping*](analysis_images/7.png)\n\nUnder invalid feature filtering, we will choose \"Do Not Filter'.\n\n![Figure 8: *Do Not Filter Parameter*](analysis_images/8.png)\n\nThe below is the output of the clipped road network named as `Clipped`.\n\n![Figure 9: *Output of Road Network*](analysis_images/9.png)\n\n#### Step 6: Exporting Road Network\n\nWe will right clicked onto the layer `Clipped`, select `Export -> Save Feature As...`.\n\n![Figure 10: *Exporting Road Network*](analysis_images/10.png)\n\nIn the format, we will select `GeoPackage`, selecting the appropriate location and naming the file.\n\n![Figure 11: *Saving Road Layer Layer*](analysis_images/11.png)\n\nFinal output of `roadnetwork` of Singapore is seen below.\n\n![Figure 12: *Final Output of Road Network of Singapore*](analysis_images/12.png)\n\nLastly, we will remove the `Clipped` layer as it is redundant. We will right clicked and select `Remove Layer`.\n\n![Figure 13: *Removing `Clipped` Layer*](analysis_images/13.png)\n\n#### Step 7: Adding AAC Layer\n\nFirst, Drag and drop the `cc.shp` into the map. This will be the Destination.\n\n![Figure 14: *Adding AAC Layer*](analysis_images/14.png)\n\n#### Step 8: Creating Centroids\n\nNext, we will select `Vector -> Geometry Tools -> Centroids` in creating the centroids of the projected population. This will be the Origin.\n\n![Figure 15: *Creating Centroids*](analysis_images/15.png)\n\nFor the parameters, ensure the layer with the hexagons is chosen, in this instance, `geriesti_hex`.\n\n![Figure 16: *Parameters of Creating Centroids*](analysis_images/16.png)\n\n#### Step 9: Exporting Centroids as Shapefile\n\nAfter running the previous step, you will be able to see the `Centroids`. Next, we will export the layer as a ShapeFile and save it.\n\n![Figure 17: *Exporting Centroids as Shape File*](analysis_images/17.png)\n\nIn this step, ensure that the file's format is set to ESRI Shapefile and the CRS is correct, then click onto OK to export. The file will be saved in the desired destination.\n\n![Figure 18: *Exporting Parameters*](analysis_images/18.png)\n\n## Computing Distance Matrix\n\nThis section will cover two different approaches in computing the distance matrix of centroids of the hexagons and AAC. The first approach uses the Network distance while the latter consists of using Euclidean Distance. The Manhatten distance utilises the road network of Singapore to compute while the Euclidean distance is a fly-by distance from the centroid to the AAC.\n\n### Network Distance\n\nIn this subsection, the distance matrix was computed using the `Road Network` data on QGIS. The `Road Nework` serves as a link whereas the origin (centroids) and destination (AAC) are nodes. Owing to its sophisticated computational abilities in relation to geospatial analysis, QGIS is used over R Studio. The steps are laid in this section.\n\n#### Step 1: Selecting Distance Matrix\n\nUsing the same project from the above steps, click `Vector -> Analysis Tools -> Distance Matrix`.\n\n![Figure 19: *Selecting Distance Matrix*](analysis_images/19.png)\n\n#### Step 2: Selecting Parameters\n\nThe input point layer will be the `centroid_hex` while the input unique ID filed is the `hex_id`.\n\n![Figure 20: Selecting Parameters](analysis_images/20.png)\n\nThe target point layer will be the Active Ageing Centre (`cc`) and the unique ID field will be the `name`. We will then set the output matrix to be `Standard (N x T) Distance Matrix` and run it.\n\n![Figure 21: *Selecting Parameters Cont.*](analysis_images/21.png)\n\n#### Step 3: Checking Distance Matrix Table\n\nAfter running it, the new layer \"`Distance_matrix`\" will appear. Right click and `Open Attritube Table` in ensuring that there are no errors or missing values.\n\n![Figure 22: *Open Attribute Table*](analysis_images/22.png)\n\nThe attribute layer appears appropriate. The columns are the names of the Active Ageing Centres while the rows are the Hexagons IDs.\n\n![Figure 23: *Attribute Table*](analysis_images/23.png)\n\n#### Step 4: Exporting Distance Matrix\n\nAs we would like to the distance matrix table as a CSV file, we would need to right click the `Distance_matrix` layer and select `Export-> Save Features As...`.\n\n![Figure 24: *Exporting Distance Matrix*](analysis_images/24.png)\n\n#### Step 7: Saving as CSV File\n\nEnsure that the format is in Comma Separated Value (CSV) before selecting the directory to save.\n\n![Figure 25: *Exporting Parameters*](analysis_images/25.png)\n\n#### Step 8: Importing CSV\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nod_network <- read.csv(\"data/qgis/distancematrix_aac.csv\")\n```\n:::\n\n\n\nThis code converts the distance matrix from meters to kilometers and rounds the values to 2 decimal places for better readability. It first removes the non-numeric ID column using `select(-ID)` because the previous division operation failed when trying to perform mathematical operations on mixed data types (the ID column contains character data while the distance columns contain numeric data). After removing the ID column, it converts the remaining data to a proper numeric matrix with `as.matrix()`, divides all values by 1000 to convert from meters to kilometers, and rounds the results to 2 decimal places.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nod_network <- od_network %>%\n  select(-ID) %>%  # Remove the ID column\n  as.matrix() %>%  # Convert to matrix\n  `/`(1000) %>%    # Divide by 1000\n  round(2)         # Round to 2 decimal places\n```\n:::\n\n\n\n### Euclidean Distance\n\n#### Step 1: Creating Centroids in Hexagons\n\nThis code uses the `mutate` function to replace the original polygon geometry with point geometry representing the cent43 of each hexagon using the `st_centroid` function. Then, it selects only the `hex_id` column and the new centroid geometry, storing the result in a new object called `origin_centroids`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 1: Create centroids for the origin hexagons\norigin_centroids <- geriesti_hex %>%\n  mutate(\n    geometry = st_centroid(geometry)  # convert to centroids\n  ) %>%\n  select(hex_id, geometry)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n#### Step 2: Ensures Same Coordinate Reference System (CRS)\n\nThis code transforms the CRS of `origin_centroids` to match the CRS of `aac_sf`. It uses the `st_transform` function to reproject the centroid points and `st_crs` to extract the CRS from the `aac_sf` object, ensuring both datasets use the same spatial reference system for accurate spatial operations.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 2: Ensure both datasets have the same CRS\norigin_centroids <- st_transform(origin_centroids, st_crs(aac_sf))\n```\n:::\n\n\n\n#### Step 3: Computing Distance Matrix\n\nThe below codechunk calculates the distances between every point in `origin_centroids` and every AAC in the `aac_sf` dataset, storing the results in a distance matrix called `distance_matrix`. The `st_distance` function computes the spatial distances between all combinations of features from the two datasets, creating a matrix where each row represents a centroid point and each column represents a feature from the `aac_sf` dataset.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistance_matrix <- st_distance(origin_centroids, aac_sf)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nview(distance_matrix)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n#### Step 4: Converting to Matrix\n\nThis code converts the distance matrix into a more usable format by first removing the measurement units with `as.numeric()`, then reshaping it into a proper matrix with rows equal to the number of origin centroids and columns equal to the number of features in the `aac_sf` dataset. It then assigns row names using the hexagon IDs from `origin_centroids` and column names using the names from the `aac_sf` dataset, creating an origin-destination matrix called `od_matrix` where you can easily look up distances between specific hexagons and destinations by name.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nod_matrix <- distance_matrix %>%\n  as.numeric() %>%  # Remove units\n  matrix(nrow = nrow(origin_centroids), ncol = nrow(aac_sf)) %>%\n  `rownames<-`(origin_centroids$hex_id) %>%\n  `colnames<-`(aac_sf$name)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\nThis code converts distance values from meters to kilometers and formats them to 2 decimal places. It starts by taking the existing `od_matrix` and dividing all values by 1000 to convert from meters to kilometers. The `as.matrix()` function ensures the result maintains the matrix format. Finally, the `round()` function with the parameter `2` rounds all the distance values to exactly 2 decimal places for cleaner presentation.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nod_euclidean <- round(as.matrix(od_matrix/1000), 2)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n## Modelling Accessibility\n\nIn this section, several components will be covered. Firstly, we will assess the appropriateness and the performance of the accessibility model between Two-Step Floating Catchment Area (2SFCA) and Kernel Density Two-Step Floating Catchment Area (KD2SFCA). Thereafter, a comparison will be done between using Eucidean Distance and Network Distance in computing the accessibility scores. Following which, accessibility scores of 2025 will be explored further. Lastly, trend analysis will be executed in reviewing the accessibility scores from 2025 to 2029.\n\n### Comparing Accessibility Models\n\n#### 2SFCA Method\n\nUsing the 2-Step Floating Catchment Area method to first calculate the accessibility, it consists of 2 steps:\n\nFirst, it calculates the supply to demand ratio for each facility (AAC). Below is the formula:\n\n`R_j = S_j / Σ P_k for all k where d_kj ≤ d₀`\n\nWhere:\n\n`R_j` = Supply-to-demand ratio for facility `j`\n\n`S_j` = Capacity of facility `j` (AAC capacity)\n\n`P_k` = Population at location `k` (projected seniors population)\n\nSecond, it computes the accessbility for each location using the formula: `A_i = Σ R_j  for all j where d_ij ≤ d₀`\n\nWhere: `A_i` = Accessibility score at location `i` `d_kj` = Distance between location `k` and facility `j` `d_ij` = Distance between location `i` and facility `j` `d₀` = Distance threshold (1km)\n\nNow we will use the R package `SpatialAcc` to compute the accessibility. The below code chunk calls the `ac()` function to calculate accessibility scores. The `geriesti_hex$aged_2025` provides the demand (elderly population in each hexagon), `aac_sf$capacity` provides the supply (how many people each care center can serve), and `od_km` is the distance matrix between all hexagons and care centers. The `d0 = 1` sets the maximum travel distance to 1 kilometer, `power = 2` means closer centers get exponentially more weight, and `family = \"KD2SFCA\"` specifies which accessibility method to use. The `data.frame()` wrapper converts the results into a data frame format.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naac_2SFCA_2025 <- data.frame(ac(geriesti_hex$aged_2025,\n                            aac_sf$capacity,\n                            od_euclidean, \n                            d0 = 1, #max distance people willing to travel\n                            power = 0,                \n                            family = \"2SFCA\"))\ncolnames(aac_2SFCA_2025) <- \"aac_2SFCA_2025\"\n```\n:::\n\n\n\nIn the code below, we set the search radius to be 1000 (representing 1km) similar to the maximum distance where seniors is wiling to travel.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsearch_radius <- 1000\n```\n:::\n\n\n\nThen, we will create a new data frame that counts the number of AAC withihn 1km of each origin point. It uses the `st_is_within_distance()` function to identify which AAC from the `aac_sf` dataset fall within the `search_radius` distance from each point in `origin_centroids`, then applies the `lengths()` function to count how many AACs are found for each origin point. The results are stored in a new column called `aac_count_1km` within the `aac_count_data` data frame.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naac_count_data <- data.frame(\n  aac_count_1km = lengths(st_is_within_distance(origin_centroids, aac_sf, dist = search_radius))\n)\n```\n:::\n\n\n\nThis code chunk combines multiple datasets to create a comprehensive accessibility analysis dataset. First, it uses `bind_cols()` to horizontally merge the accessibility scores in `aac_2SFCA_2025` with the AAC count data created in the previous step, adding the facility counts to the accessibility dataset. The merged result is then converted to a tibble format using `as_tibble()` for more efficient data handling. Finally, it combines the original hexagonal grid data (`geriesti_hex`) with the accessibility and count information (`aac_2SFCA_2025`) using another `bind_cols()` operation, creating the final dataset `hex_2SFCA_2025` that contains both the spatial geometry and all calculated accessibility metrics for analysis and visualisation.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 3: Combine accessibility scores, AAC counts, and original hex data\naac_2SFCA_2025 <- bind_cols(aac_2SFCA_2025, aac_count_data)\naac_2SFCA_2025 <- as_tibble(aac_2SFCA_2025)\nhex_2SFCA_2025 <- bind_cols(geriesti_hex, aac_2SFCA_2025)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n#### Extract Map Extend\n\nThis code extracts the bounding box coordinates of `geriesti_hex` and stores them in an object called `map_ex`. The `st_bbox()` function calculates the minimum and maximum longitude and latitude values that encompass the entire spatial extent of the hexagonal grid, creating a rectangular boundary that defines the geographic limits of the study area for use in mapping and visualisation functions.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap_ex <- st_bbox(geriesti_hex)\n```\n:::\n\n\n\nUsing `tmap()`, the visualisation of the accessibility scores in quantiles across Singapore is generated below.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntm_shape(mpsz,\n         bbox = map_ex) +\n  tm_fill(col = \"gray90\",           # Light gray base layer\n          border.col = \"white\",\n          border.lwd = 0.5) +\n  tm_shape(hex_2SFCA_2025,\n           bbox = map_ex) + \n  tm_fill(col = \"aac_2SFCA_2025\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\n  tm_shape(aac_sf) +\n  tm_symbols(size = 0.1,\n             col = \"pink\") +\n  tm_layout(main.title = \"Accessibility of AAC: 2SFCA Method\",\n            main.title.position = \"center\",\n            main.title.size = 0.5,\n            legend.outside = FALSE,\n            legend.height = 0.25, \n            legend.width = 1.5,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            legend.text.size = 0.6,\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n```\n:::\n\n\n\n#### KD2SFCA Method\n\nFollowing the 2SFCA method, we will compute the accessibility using a refined accessibility model; the Kernel Density Two-Step Floating Catchment Area to compare against the 2SFCA model. This model differentiates from the former by adding distance decay weights. This is imperative as it gives more weight to seniors living closer to AAC and realistically, seniors will likely to travel to the AAC closest to their residence.\n\nFirstly, it calculates Weighted Supply-to-Demand Ratio using the below formula:\n\n`R_j = S_j / Σ [P_k × f(d_kj)] for all k`\n\nFollowing which, it calculates the weighted accessibility using the formula below:\n\n`A_i = Σ [R_j × f(d_ij)] for all j`\n\nWhere:\n\n`f(d)` = Distance decay function (kernel)\n\nAll other variables same as 2SFCA\n\nUsing the same R package `SpatialAcc` to compute, the below code chunk uses `ac()` function to calculate accessibility scores. The `geriesti_hex$aged_2025` provides the demand (elderly population in each hexagon), `aac_sf$capacity` provides the supply (how many people each care center can serve), and `od_km` is the distance matrix between all hexagons and care centers. The `d0 = 5` sets the maximum travel distance to 5 kilometers, `power = 2` means closer centers get exponentially more weight, and `family = \"KD2SFCA\"` specifies which accessibility method to use. The `data.frame()` wrapper converts the results into a data frame format.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naac_KD2SFCA_2025 <- data.frame(ac(geriesti_hex$aged_2025,\n                            aac_sf$capacity,\n                            od_euclidean, \n                            d0 = 1, #max distance people willing to travel\n                            power = 2, #put higher weigh to nearer distance\n                            family = \"KD2SFCA\"))\ncolnames(aac_KD2SFCA_2025) <- \"aac_KD2SFCA_2025\"\n```\n:::\n\n\n\nThe code chunk below is a compilation of the similar codes ran for the 2SFCA model except creating new column, `aac_KD2SFCA_2025` and data frame `hex_KD2SFCA_2025`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsearch_radius <- 1000\naac_count_data <- data.frame(\n  aac_count_1km = lengths(st_is_within_distance(origin_centroids, aac_sf, dist = search_radius))\n)\n# Step 3: Combine accessibility scores, AAC counts, and original hex data\naac_KD2SFCA_2025 <- bind_cols(aac_KD2SFCA_2025, aac_count_data)\naac_KD2SFCA_2025 <- as_tibble(aac_KD2SFCA_2025)\nhex_KD2SFCA_2025 <- bind_cols(geriesti_hex, aac_KD2SFCA_2025)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\nSimilarly, we will plot the accessibility scores using the KD2SFCA model.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntm_shape(mpsz,\n         bbox = map_ex) +\n  tm_fill(col = \"gray90\",           # Light gray base layer\n          border.col = \"white\",\n          border.lwd = 0.5) +\ntm_shape(hex_KD2SFCA_2025,\n         bbox = map_ex) + \n  tm_fill(col = \"aac_KD2SFCA_2025\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\ntm_shape(aac_sf) +\n  tm_symbols(size = 0.1,\n             col = \"pink\") +\n  tm_layout(main.title = \"Accessibility of AAC: KD2SFCA Method\",\n            main.title.position = \"center\",\n            main.title.size = 0.5,\n            legend.outside = FALSE,\n            legend.height = 0.25, \n            legend.width = 1.5,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            legend.text.size = 0.6,\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n```\n:::\n\n\n\n#### Comparison of 2SFCA & KD2SFCA\n\n##### Distribution Analysis of AAC Accessibility Scores: 2SFCA vs KD2SFCA Methods\n\nBoth histograms reveal highly right-skewed distributions of accessibility scores to Active Ageing Centres, indicating that the majority of hexagonal grid cells across Singapore have low accessibility to these facilities. However, these two models produce notably different distributional characteristics.\n\n##### \n**2SFCA Method Distribution**\n\nThe 2SFCA histogram demonstrates an extremely concentrated distribution with approximately 7,500 observations clustered in the lowest accessibility bin (near 0.00). The distribution exhibits a sharp exponential decay, with frequency dropping precipitously as accessibility scores increase. Very few observations extend beyond 0.015 indicating that under the traditional 2SFCA method, high accessibility to Active Ageing Centres is rare across Singapore.\n\n**KD2SFCA Method Distribution**\n\nThe KD2SFCA histogram shows a similar right-skewed pattern but with a more extended tail and broader range of accessibility values. While the modal frequency remains concentrated near zero (approximately 8,000 observations), the distribution extends further rightward, reaching accessibility scores up to 0.035-0.040. This method identifies a greater number of moderate accessibility areas compared to the traditional 2SFCA approach, suggesting that the kernel density enhancement captures additional accessibility nuances.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Histogram for accessibility scores\nggplot(hex_2SFCA_2025, aes(x = aac_2SFCA_2025)) +\n  geom_histogram(bins = 30, fill = \"steelblue\", alpha = 0.7, color = \"black\") +\n  labs(title = \"Distribution of AAC Accessibility Scores (2SFCA)\",\n       x = \"Accessibility Score\",\n       y = \"Frequency\") +\n  ylim(0, 8000)\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\nggplot(hex_KD2SFCA_2025, aes(x = aac_KD2SFCA_2025)) +\n  geom_histogram(bins = 30, fill = \"lightgreen\", alpha = 0.7, color = \"black\") +\n  labs(title = \"Distribution of AAC Accessibility Scores (KD2SFCA)\",\n       x = \"Accessibility Score\",\n       y = \"Frequency\") +\n  ylim(0, 8000)\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n:::\n\n\n\nIn analysing the percentile of both 2SFCA and KD2SFCA models, noticeably the KD2SFCA model is able to portray higher extreme values (`0.038`), as seen in Max as compared to the 2SFCA model (`0.035`). This can suggest that the distance decay function allows KD2SFCA to better differentiate areas with exceptionally good accessibility where multiple AACs are located very closely. Additionally, KD2SFCA shows more variability (`SD = 0.0049`) whereas 2SFCA model has a SD of `0.0048`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 2. DISTRIBUTION ANALYSIS \ncat(\"=== 2SFCA ACCESSIBILITY SCORES DISTRIBUTION ===\\n\")\nsummary(hex_2SFCA_2025$aac_2SFCA_2025)\ncat(\"\\nStandard Deviation:\", sd(hex_2SFCA_2025$aac_2SFCA_2025, na.rm = TRUE), \"\\n\")\ncat(\"Skewness:\", moments::skewness(hex_2SFCA_2025$aac_2SFCA_2025, na.rm = TRUE), \"\\n\")\ncat(\"Kurtosis:\", moments::kurtosis(hex_2SFCA_2025$aac_2SFCA_2025, na.rm = TRUE), \"\\n\")\n\ncat(\"\\n=== KD2SFCA ACCESSIBILITY SCORES DISTRIBUTION ===\\n\")\nsummary(hex_KD2SFCA_2025$aac_KD2SFCA_2025)\ncat(\"\\nStandard Deviation:\", sd(hex_KD2SFCA_2025$aac_KD2SFCA_2025, na.rm = TRUE), \"\\n\")\ncat(\"Skewness:\", moments::skewness(hex_KD2SFCA_2025$aac_KD2SFCA_2025, na.rm = TRUE), \"\\n\")\ncat(\"Kurtosis:\", moments::kurtosis(hex_KD2SFCA_2025$aac_KD2SFCA_2025, na.rm = TRUE), \"\\n\")\n\ncat(\"\\n=== AAC COUNT WITHIN 1KM DISTRIBUTION ===\\n\")\nsummary(hex_2SFCA_2025$aac_count_1km)\ncat(\"\\nStandard Deviation:\", sd(hex_2SFCA_2025$aac_count_1km, na.rm = TRUE), \"\\n\")\ncat(\"Skewness:\", moments::skewness(hex_2SFCA_2025$aac_count_1km, na.rm = TRUE), \"\\n\")\ncat(\"Kurtosis:\", moments::kurtosis(hex_2SFCA_2025$aac_count_1km, na.rm = TRUE), \"\\n\")\n\n# Frequency table for AAC count\ncat(\"\\n=== AAC COUNT FREQUENCY TABLE ===\\n\")\nprint(table(hex_2SFCA_2025$aac_count_1km))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# KIV IF LOOKING INTO PERCENTILE\n# 5. PERCENTILE ANALYSIS - BOTH METHODS\ncat(\"\\n=== PERCENTILE ANALYSIS ===\\n\")\npercentiles <- c(0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 0.99)\n\ncat(\"2SFCA Accessibility Score Percentiles:\\n\")\naccessibility_percentiles_2sfca <- quantile(hex_2SFCA_2025$aac_2SFCA_2025, \n                                           probs = percentiles, na.rm = TRUE)\nprint(accessibility_percentiles_2sfca)\n\ncat(\"\\nKD2SFCA Accessibility Score Percentiles:\\n\")\naccessibility_percentiles_kd2sfca <- quantile(hex_KD2SFCA_2025$aac_KD2SFCA_2025, \n                                             probs = percentiles, na.rm = TRUE)\nprint(accessibility_percentiles_kd2sfca)\n\ncat(\"\\nAAC Count (1km) Percentiles:\\n\")\naac_count_percentiles <- quantile(hex_2SFCA_2025$aac_count_1km, \n                                 probs = percentiles, na.rm = TRUE)\nprint(aac_count_percentiles)\n```\n:::\n\n\n\n#### Boxplot\n\nBoth boxplots reveal extremely right-skewed distributions of accessibility scores to Active Ageing Centres, but demonstrate important methodological differences between the two approaches.\n\n#### Central Tendency and Spread\n\nBoth methods show nearly identical central tendencies, with medians (thick black lines) positioned extremely close to zero, indicating that half of all locations across Singapore have virtually no accessibility to Active Ageing Centres. The interquartile ranges (IQR) represented by the green and blue boxes are similarly compressed near zero for both methods, confirming that 75% of locations have minimal accessibility regardless of the calculation approach.\n\n####Outlier \n\nThe most significant difference lies in outlier identification and maximum values. The **2SFCA method** (blue) identifies numerous discrete outliers as individual points extending up to approximately 0.035, suggesting that high-accessibility areas are treated as exceptional cases distinct from the main distribution. In contrast, the **KD2SFCA method** (green) shows a single, dense cluster of outliers that extends as a thick black line up to nearly 0.040, indicating a more continuous range of high accessibility values.\n\n####  Methodological Implications\n\nThe KD2SFCA's dense outlier cluster suggests that the kernel density enhancement creates a **more gradual transition** from low to high accessibility areas, rather than the sharp categorical distinction evident in the traditional 2SFCA approach. This indicates that KD2SFCA captures **intermediate accessibility levels** more effectively, providing a more nuanced representation of spatial accessibility patterns.\n\n#### Data Distribution Characteristics\n\nBoth methods confirm the **extreme concentration of low accessibility** across Singapore, with the vast majority of hexagonal grid cells experiencing minimal access to Active Ageing Centres. However, the KD2SFCA method's continuous outlier pattern suggests it may be **more sensitive to distance decay effects** and spatial relationships, potentially providing more realistic accessibility gradients in urban environments.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Box plots for accessibility scores\nggplot(hex_2SFCA_2025, aes(y = aac_2SFCA_2025)) +\n  geom_boxplot(fill = \"steelblue\", alpha = 0.7) +\n  labs(title = \"Box Plot: 2SFCA Accessibility Scores\",\n       y = \"Accessibility Score\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\nggplot(hex_KD2SFCA_2025, aes(y = aac_KD2SFCA_2025)) +\n  geom_boxplot(fill = \"lightgreen\", alpha = 0.7) +\n  labs(title = \"Box Plot: KD2SFCA Accessibility Scores\",\n       y = \"Accessibility Score\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Box plot for AAC count\nggplot(hex_2SFCA_2025, aes(y = aac_count_1km)) +\n  geom_boxplot(fill = \"coral\", alpha = 0.7) +\n  labs(title = \"Box Plot: AAC Count within 1km\",\n       y = \"Number of AACs\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 4. CORRELATION ANALYSIS \n# Scatter plots with correlation\nggplot(hex_2SFCA_2025, \n                       aes(x = aac_count_1km, y = aac_2SFCA_2025)) +\n  geom_point(alpha = 0.6, color = \"steelblue\") +\n  geom_smooth(method = \"lm\", color = \"red\", se = TRUE) +\n  labs(title = paste(\"2SFCA: Accessibility vs AAC Count (1km)\\nCorrelation:\", round(correlation_2sfca, 3)),\n       x = \"Number of AACs within 1km\",\n       y = \"2SFCA Accessibility Score\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\nggplot(hex_KD2SFCA_2025, \n                         aes(x = aac_count_1km, y = aac_KD2SFCA_2025)) +\n  geom_point(alpha = 0.6, color = \"darkgreen\") +\n  geom_smooth(method = \"lm\", color = \"red\", se = TRUE) +\n  labs(title = paste(\"KD2SFCA: Accessibility vs AAC Count (1km)\\nCorrelation:\", round(correlation_kd2sfca, 3)),\n       x = \"Number of AACs within 1km\",\n       y = \"KD2SFCA Accessibility Score\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n:::\n\n\n\n#### Decision in Choosing KD2SFCA\n\n##### Realistic Representation of Seniors Commute Behaviour\n\nThe traditional 2SFCA method treats all Active Ageing Centres (AACs) within a catchment area as equally accessible, which fails to account for the unique mobility constraints of elderly populations. However, seniors face significant barriers to accessing healthcare services, including reduced physical mobility, reliance on public transportation, and reluctance to travel long distances (Luo & Qi, 2009). From the plot, the 2SFCA method shows uniform accessibility within catchment areas, while KD2SFCA incorporates distance decay that better reflects how senior users actually choose AACs that is closer to them.\n\n##### Enhanced Spatial Precision for Age-Friendly Planning\n\nThe sharp boundaries created by 2SFCA are particularly problematic for elderly service planning because they create artificial accessibility cliffs that don't reflect the gradual decline in service utilization with distance. Your KD2SFCA map shows smooth accessibility gradients that are more realistic for elderly populations who may have varying degrees of mobility limitations. Wang and Luo (2005) argue that the binary nature of traditional catchment methods fails to capture the continuous spatial variation in accessibility that is crucial for elderly service planning. The enhanced granularity in your KD2SFCA results (ranging up to 0.026821 compared to 0.012054 in 2SFCA) provides better differentiation of accessibility levels essential for identifying areas where elderly residents may struggle to access active ageing services.\n\n##### Better Identification of Age-Related Accessibility Barriers\n\nKD2SFCA's ability to show zero accessibility in some areas (visible in your Image 2) is particularly relevant for Active Ageing Centre analysis, as it identifies locations where elderly residents are truly isolated from services. Research by Tao et al. (2014) on elderly healthcare accessibility emphasizes that realistic distance decay functions are essential for identifying underserved elderly populations who may be unable to travel beyond certain distances due to physical limitations or transportation constraints. The areas showing zero accessibility in your KD2SFCA map represent locations where elderly residents would face significant barriers to participating in active ageing programs, which is crucial information for equitable service provision.\n\n##### Implications for Singapore's Ageing Population\n\nGiven Singapore's rapidly ageing population, the more nuanced accessibility patterns revealed by KD2SFCA in your analysis are crucial for strategic AAC planning. The method's ability to show gradual accessibility decline helps identify optimal locations for new centers and transportation improvements that would maximize elderly participation in active ageing programs, supporting Singapore's goal of creating an age-friendly society.\n\n------------------------------------------------------------------------\n\n##### *References*\n\n-   Guagliardo, M. F. (2004). Spatial accessibility of primary care: concepts, methods and challenges. *International Journal of Health Geographics*, 3(1), 3.\n\n-   Langford, M., Higgs, G., & Fry, R. (2016). Multi-modal two-step floating catchment area analysis of primary health care accessibility. *Health & Place*, 38, 70-81.\n\n-   Luo, W., & Qi, Y. (2009). An enhanced two-step floating catchment area (E2SFCA) method for measuring spatial accessibility to primary care physicians. *Health & Place*, 15(4), 1100-1107.\n\n-   Tao, Z., Cheng, Y., & Liu, J. (2020). Hierarchical two-step floating catchment area (H2SFCA) method: measuring the spatial accessibility to hierarchical healthcare facilities in Shenzhen, China. *International Journal for Equity in Health*, 19(1), 164.\n\n-   Wang, F., & Luo, W. (2005). Assessing spatial and nonspatial factors for healthcare access: towards an integrated approach to defining health professional shortage areas. *Health & Place*, 11(2), 131-146.\n\n-   World Health Organization. (2007). *Global age-friendly cities: A guide*. World Health Organization.\n\n## Comparing Euclidean & Network Distance\n\n### Reading Euclidean Distance\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_KD2SFCA_euclidean = read_rds(\"data/rds/analysis/aac/hex_KD2SFCA_2025.rds\")\n```\n:::\n\n\n\n### Computing using Network Distance\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naac_KD2SFCA_network <- data.frame(ac(geriesti_hex$aged_2025,\n                                aac_sf$capacity,\n                                od_network, \n                                d0 = 1, #max distance people willing to travel\n                                power = 2, #put higher weigh to nearer distance\n                                family = \"KD2SFCA\"))\ncolnames(aac_KD2SFCA_network) <- \"aac_KD2SFCA_network\"\n# Step 3: Combine accessibility scores, AAC counts, and original hex data\naac_KD2SFCA_network <- bind_cols(aac_KD2SFCA_network, aac_count_data)\naac_KD2SFCA_network <- as_tibble(aac_KD2SFCA_network)\nhex_KD2SFCA_network <- bind_cols(geriesti_hex, aac_KD2SFCA_network)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n### Differences\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Basic statistics\ncat(\"\\nRoad Network KD2SFCA Summary:\\n\")\nprint(summary(aac_KD2SFCA_network$aac_KD2SFCA_network))\ncat(\"Standard Deviation:\", sd(aac_KD2SFCA_network$aac_KD2SFCA_network, na.rm = TRUE), \"\\n\")\n\ncat(\"\\nEuclidean Distance KD2SFCA Summary:\\n\")\nprint(summary(hex_KD2SFCA_euclidean$aac_KD2SFCA_2025))\ncat(\"Standard Deviation:\", sd(hex_KD2SFCA_euclidean$aac_KD2SFCA_2025, na.rm = TRUE), \"\\n\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Paired t-test (assuming same order)\npaired_test <- t.test(aac_KD2SFCA_network$aac_KD2SFCA_network, \n                     hex_KD2SFCA_euclidean$aac_KD2SFCA_2025, \n                     paired = TRUE)\ncat(\"\\nPaired T-test Results:\\n\")\nprint(paired_test)\n```\n:::\n\n\n\n### Selecting Network Distance\n\nThe summary statistics reveal that both road network and Euclidean distance methods produce virtually identical KD2SFCA accessibility scores across all measured parameters, with both methods showing the same minimum value of 0, median of 0.0023469, mean of 0.0038467, and maximum of 0.0381189, along with nearly identical standard deviations of approximately 0.00497. This perfect alignment in descriptive statistics indicates that in Singapore's dense urban context, the difference between actual road distances and straight-line distances is negligible for accessibility calculations, likely due to the city-state's efficient grid-like road network and compact geography. The paired t-test confirms this statistical equivalence with a p-value of 0.2162, which is well above the conventional significance threshold of 0.05, meaning we cannot reject the null hypothesis that there is no difference between the two methods. The mean difference of 6.22 × 10⁻¹⁰ is so infinitesimally small that it represents essentially zero difference, while the 95% confidence interval spanning from negative to positive values and including zero further confirms that any observed difference is merely due to random computational variation rather than meaningful methodological differences. Given these findings, you should use KD2SFCA over traditional 2SFCA because KD2SFCA incorporates distance decay functions that realistically model how elderly populations access Active Ageing Centres, where closer facilities are strongly preferred over distant ones even within the same catchment area. Unlike 2SFCA's binary approach that treats all facilities within 5km as equally accessible, KD2SFCA recognizes that elderly individuals face mobility constraints and are less likely to travel to facilities at the edge of their catchment area, making it a more behaviorally accurate and policy-relevant measure. Additionally, since both distance methods (network vs Euclidean) produce identical results with KD2SFCA, you can confidently use the computationally simpler Euclidean approach without sacrificing accuracy, making KD2SFCA both methodologically superior and practically efficient for elderly accessibility analysis in Singapore's urban environment.\n\n## MAIN MODEL: Results\n\nfilter and show SZ with below avg accessibility\n\nBased on the summary statistics, the average accessibility score is 0.0038467.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_KD2SFCA_2025 = read_rds(\"data/rds/analysis/aac/hex_KD2SFCA_network.rds\")\n```\n:::\n\n\n\n### Histogram of Accessibility Scores\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the mean\nmean_value <- mean(hex_KD2SFCA_network$aac_KD2SFCA_network, na.rm = TRUE)\n\n# Create histogram with bell curve and average line\nggplot(hex_KD2SFCA_network, aes(x = aac_KD2SFCA_network)) +\n  geom_histogram(aes(y = after_stat(density)), bins = 30, fill = \"lightblue\", alpha = 0.7) +\n  stat_function(fun = dnorm, \n                args = list(mean = mean(hex_KD2SFCA_network$aac_KD2SFCA_network, na.rm = TRUE),\n                           sd = sd(hex_KD2SFCA_network$aac_KD2SFCA_network, na.rm = TRUE)),\n                color = \"red\", size = 0.2) +\n  geom_vline(xintercept = mean_value, color = \"blue\", linetype = \"dashed\", size = 1) +\n  annotate(\"text\", x = mean_value, y = Inf, label = paste(\"Mean =\", round(mean_value, 4)), \n           vjust = 1.5, hjust = -0.1, color = \"blue\") +\n  labs(title = \"Distribution of aac_KD2SFCA_network\",\n       x = \"aac_KD2SFCA_network\",\n       y = \"Density\") +\n  theme_minimal()\n```\n:::\n\n\n\n### Accessibility in Regions\n\nThe below R code chunk visualizes the distribution of observations across Singapore's regions by first removing spatial geometry from the dataset, then grouping and counting observations by region while calculating percentages. The code creates a summary table showing both raw counts and percentages for each region, sorted in descending order. It then generates a pie chart using ggplot2, transforming a stacked bar chart into circular format with coord_polar(), and adds comprehensive labels showing region names, observation counts, and percentages on each slice. The final output includes both a printed summary table and a formatted pie chart with a centered title and right-positioned legend.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate counts and percentages\nregion_counts <- hex_KD2SFCA_network %>%\n  st_drop_geometry() %>%\n  group_by(REGION_N) %>%\n  summarise(observations = n(), .groups = 'drop') %>%\n  mutate(percentage = round(observations / sum(observations) * 100, 1)) %>%\n  arrange(desc(observations))\n\nprint(region_counts)\n\n# Create pie chart\nggplot(region_counts, aes(x = \"\", y = observations, fill = REGION_N)) +\n  geom_col(width = 1) +\n  coord_polar(\"y\", start = 0) +\n  geom_text(aes(label = paste0(REGION_N, \"\\n\", observations, \"\\n(\", percentage, \"%)\")), \n            position = position_stack(vjust = 0.5)) +\n  labs(title = \"Distribution of Observations by Region\",\n       fill = \"Region\") +\n  theme_void() +\n  theme(legend.position = \"right\",\n        plot.title = element_text(hjust = 0.5))\n```\n:::\n\n\n\n#### Mean Accessibility in Regions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summary statistics by region\nregion_summary <- hex_KD2SFCA_network %>%\n  st_drop_geometry() %>%\n  group_by(REGION_N) %>%\n  summarise(\n    count = n(),\n    mean_accessibility = mean(aac_KD2SFCA_network, na.rm = TRUE),\n    median_accessibility = median(aac_KD2SFCA_network, na.rm = TRUE),\n    sd_accessibility = sd(aac_KD2SFCA_network, na.rm = TRUE),\n    min_accessibility = min(aac_KD2SFCA_network, na.rm = TRUE),\n    max_accessibility = max(aac_KD2SFCA_network, na.rm = TRUE),\n    .groups = 'drop'\n  )\n\nprint(region_summary)\n```\n:::\n\n\n\n#### Violin Plot\n\nThe violin plot provides deeper insights into the distribution patterns within each region. The Central Region displays an extreme positive skew with a very long tail extending up to 0.04, indicating that while most areas have moderate accessibility, some locations enjoy exceptionally high access to services. In contrast, the East Region shows a very narrow distribution concentrated near zero, confirming that this region experiences consistently poor accessibility across all areas. The North, North-East, and West Regions demonstrate relatively normal distributions centered around their respective means, though most observations in all regions cluster below the national average line.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(hex_KD2SFCA_network, aes(x = REGION_N, y = aac_KD2SFCA_network)) +\n  geom_violin(fill = \"lightgreen\", alpha = 0.7) +\n  geom_boxplot(width = 0.1, fill = \"white\") +\n  geom_hline(yintercept = 0.0038467, color = \"red\", linetype = \"dashed\", size = 0.9) +\n  annotate(\"text\", x = Inf, y = 0.0038467, label = \"National Avg = 0.0038467\", \n           vjust = -1, hjust = 3, color = \"red\") +\n  labs(title = \"Accessibility Distribution by Region (Violin Plot)\",\n       x = \"Region\",\n       y = \"Accessibility (aac_KD2SFCA_network)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n:::\n\n\n\n#### Bar Chart\n\nThe bar chart reveals significant regional disparities, with the Central Region achieving the highest mean accessibility score of 0.0055, which is well above the national average of 0.0038467. The West Region also performs slightly above the national benchmark at 0.0041, while the North, North-East, and East Regions all fall below average with scores of 0.0029, 0.0029, and 0.0011 respectively. The East Region shows particularly concerning results, with accessibility levels less than one-third of the national average.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Bar chart with national average line\nggplot(region_summary, aes(x = reorder(REGION_N, mean_accessibility), y = mean_accessibility)) +\n  geom_col(fill = \"coral\", alpha = 0.8) +\n  geom_text(aes(label = round(mean_accessibility, 4)), vjust = -0.5) +\n  geom_hline(yintercept = 0.0038467, color = \"red\", linetype = \"dashed\", size = 1) +\n  annotate(\"text\", x = Inf, y = 0.0038467, label = \"National Avg = 0.0038467\", \n           vjust = -0.5, hjust = 1.1, color = \"red\") +\n  labs(title = \"Mean Accessibility by Region\",\n       x = \"Region\",\n       y = \"Mean Accessibility\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n:::\n\n\n\n#### Explanation\n\nThe uneven distribution of observations across regions introduces potential bias into the analysis and national statistics. The Central Region dominates the dataset with 11,549 observations representing 37% of the total sample, and this region's combination of high accessibility scores and large sample size heavily influences the national average, potentially inflating it above what a truly representative average might show. Meanwhile, peripheral regions like the North Region are underrepresented with only 3,607 observations (12% of total), meaning their poor accessibility scores carry less statistical weight in national calculations. This sampling imbalance creates greater statistical reliability for Central Region estimates while making smaller regional samples more susceptible to outliers or measurement errors. From a policy perspective, these skewed sample sizes might lead to initiatives that appear nationally successful but actually mask significant regional inequities, particularly in the undersampled northern and eastern areas where residents may face genuine accessibility challenges.\n\n### Creating new dataframe for Accessibility Scores Below National Average\n\nThe code chunk below creates a new sf `belowavg` by filtering the accessibility score less than the average, 0.0038467 from `aac_KD2SFCA_network` and also returning the column `aged_2025` where the population is more than zero. The latter step is done so we can scope into residential areas only.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbelowavg <- hex_KD2SFCA_network %>%\n  filter(aac_KD2SFCA_network < 0.0038467) %>%\n  filter(aged_2025 > 0)\n```\n:::\n\n\n\n### Plotting Accessibility Scores Below National Average\n\nIn the plot below, we noticed that the darker reds represents slightly below the national average of `0.0038` while the lighter colours represent extremely poor accessibility.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntm_shape(mpsz,\n         bbox = map_ex) +\n  tm_fill(col = \"gray90\",           # Light gray base layer\n          border.col = \"white\",\n          border.lwd = 0.5) +\n  tm_shape(belowavg,\n           bbox = map_ex) + \n  tm_fill(col = \"aac_KD2SFCA_network\",\n          n = 10,\n          style = \"quantile\",\n          border.col = \"black\",\n          border.lwd = 1) +\n  tm_shape(aac_sf) +\n  tm_symbols(size = 0.1,\n             col = \"pink\") +\n  tm_layout(main.title = \"Accessibility of AAC: Below Average (KD2SFCA Method)\",\n            main.title.position = \"center\",\n            main.title.size = 0.5,\n            legend.outside = FALSE,\n            legend.height = 0.25, \n            legend.width = 1.5,\n            legend.format = list(digits = 6),\n            legend.position = c(\"right\", \"top\"),\n            legend.text.size = 0.6,\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.5)\n```\n:::\n\n\n\n### AAC Accessibility\n\nThis map reveals significant spatial disparities in Active Ageing Centre accessibility across Singapore, with clear evidence of a central-peripheral divide in service provision. The central areas of Singapore demonstrate exceptional AAC accessibility, with some locations having access to 13-14 facilities within a 1km radius, as indicated by the dark red zones clustered in the heart of the island. These central areas benefit from dense facility clustering, where elderly residents can choose from multiple nearby AACs, suggesting successful urban planning that concentrates services in high-density areas. The spatial distribution shows several secondary clusters of moderate to good accessibility (orange zones with 5-8 AACs) scattered across different regions of Singapore, indicating that while central areas dominate in terms of service density, there are pockets of well-served neighborhoods throughout the island. However, the map also reveals concerning accessibility gaps, particularly in peripheral areas where light yellow zones indicate that residents have access to only 1-2 AACs within walking distance. These underserved areas represent potential equity concerns, as elderly residents in these locations face limited choices and may need to travel greater distances to access active ageing services. The concentration of black crosses in the central and well-served areas confirms that AAC facilities are strategically located in high-accessibility zones, but this clustering approach may inadvertently create service deserts in outlying areas. From a policy perspective, this pattern suggests that while Singapore has achieved high service density in core areas, there may be opportunities to improve geographic equity by establishing additional facilities or mobile services in the peripheral light yellow zones. The clear visualization of accessibility gradients from the center outward provides valuable insights for future AAC planning, highlighting the need to balance efficient service clustering with equitable geographic distribution to ensure all elderly residents have reasonable access to active ageing opportunities regardless of their residential location.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create centroids for bubble placement\nhex_centroids <- hex_KD2SFCA_network %>%\n  st_centroid() %>%\n  filter(!is.na(aac_count_1km) & aac_count_1km > 0)  # Remove NA and zero values\n\ntmap_mode(\"plot\")\ntm_shape(mpsz, bbox = map_ex) +\n  tm_fill(col = \"gray95\",\n          border.col = \"gray70\",\n          border.lwd = 0.5) +\ntm_shape(hex_centroids) +\n  tm_bubbles(col = \"aac_count_1km\",          # Color varies with count\n             scale = 1.0,                    # Smaller bubbles\n             palette = \"YlOrRd\",             # Yellow to red gradient\n             border.col = \"white\",           # White borders for contrast\n             border.lwd = 0.2,\n             alpha = 0.8,\n             title.col = \"AAC Count\") +\ntm_shape(aac_sf) +\n  tm_symbols(size = 0.08,\n             col = \"black\",\n             shape = 4) +\n  tm_layout(main.title = \"Number of AACs within 1km Radius\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.outside = TRUE,\n            legend.outside.position = \"right\",\n            frame = TRUE) +\n  tm_compass(type = \"arrow\", size = 2) +\n  tm_scale_bar(width = 0.15)\n```\n:::\n\n\n\n### Over the Year 2025 - 2029\n\n#### Year 2026\n\nFINAL MODEL\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naac_KD2SFCA_2026 <- data.frame(ac(geriesti_hex$aged_2026,\n                                     aac_sf$capacity,\n                                     od_network, \n                                     d0 = 1, #max distance people willing to travel\n                                     power = 2, #put higher weigh to nearer distance\n                                     family = \"KD2SFCA\"))\ncolnames(aac_KD2SFCA_2026) <- \"aac_KD2SFCA_2026\"\n# Step 3: Combine accessibility scores, AAC counts, and original hex data\naac_KD2SFCA_2026 <- bind_cols(aac_KD2SFCA_2026, aac_count_data)\naac_KD2SFCA_2026 <- as_tibble(aac_KD2SFCA_2026)\nhex_KD2SFCA_2026 <- bind_cols(geriesti_hex, aac_KD2SFCA_2026)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n#### Year 2027\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naac_KD2SFCA_2027 <- data.frame(ac(geriesti_hex$aged_2027,\n                                     aac_sf$capacity,\n                                     od_network, \n                                     d0 = 1, #max distance people willing to travel\n                                     power = 2, #put higher weigh to nearer distance\n                                     family = \"KD2SFCA\"))\ncolnames(aac_KD2SFCA_2027) <- \"aac_KD2SFCA_2027\"\n# Step 3: Combine accessibility scores, AAC counts, and original hex data\naac_KD2SFCA_2027 <- bind_cols(aac_KD2SFCA_2027, aac_count_data)\naac_KD2SFCA_2027 <- as_tibble(aac_KD2SFCA_2027)\nhex_KD2SFCA_2027 <- bind_cols(geriesti_hex, aac_KD2SFCA_2027)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n#### Year 2028\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naac_KD2SFCA_2028 <- data.frame(ac(geriesti_hex$aged_2028,\n                                     aac_sf$capacity,\n                                     od_network, \n                                     d0 = 1, #max distance people willing to travel\n                                     power = 2, #put higher weigh to nearer distance\n                                     family = \"KD2SFCA\"))\ncolnames(aac_KD2SFCA_2028) <- \"aac_KD2SFCA_2028\"\n# Step 3: Combine accessibility scores, AAC counts, and original hex data\naac_KD2SFCA_2028 <- bind_cols(aac_KD2SFCA_2028, aac_count_data)\naac_KD2SFCA_2028 <- as_tibble(aac_KD2SFCA_2028)\nhex_KD2SFCA_2028 <- bind_cols(geriesti_hex, aac_KD2SFCA_2028)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n#### Year 2029\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naac_KD2SFCA_2029 <- data.frame(ac(geriesti_hex$aged_2029,\n                                     aac_sf$capacity,\n                                     od_network, \n                                     d0 = 1, #max distance people willing to travel\n                                     power = 2, #put higher weigh to nearer distance\n                                     family = \"KD2SFCA\"))\ncolnames(aac_KD2SFCA_2029) <- \"aac_KD2SFCA_2029\"\n# Step 3: Combine accessibility scores, AAC counts, and original hex data\naac_KD2SFCA_2029 <- bind_cols(aac_KD2SFCA_2029, aac_count_data)\naac_KD2SFCA_2029 <- as_tibble(aac_KD2SFCA_2029)\nhex_KD2SFCA_2029 <- bind_cols(geriesti_hex, aac_KD2SFCA_2029)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n### Accessibility Trend Over 5 Years\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhex_KD2SFCA_2025 <- hex_KD2SFCA_2025 %>%\n  rename(aac_KD2SFCA_2025 = aac_KD2SFCA_network)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Combine all years data and calculate yearly averages\nyearly_trends <- data.frame(\n  year = 2025:2029,\n  mean_accessibility = c(\n    mean(hex_KD2SFCA_2025$aac_KD2SFCA_2025, na.rm = TRUE),\n    mean(hex_KD2SFCA_2026$aac_KD2SFCA_2026, na.rm = TRUE),\n    mean(hex_KD2SFCA_2027$aac_KD2SFCA_2027, na.rm = TRUE),\n    mean(hex_KD2SFCA_2028$aac_KD2SFCA_2028, na.rm = TRUE),\n    mean(hex_KD2SFCA_2029$aac_KD2SFCA_2029, na.rm = TRUE)\n  )\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot the trend\nggplot(yearly_trends, aes(x = year, y = mean_accessibility)) +\n  geom_line(size = 1.2, color = \"blue\") +\n  geom_point(size = 3, color = \"red\") +\n  geom_text(aes(label = round(mean_accessibility, 5)), \n            vjust = 0.3, hjust = 0.7) +\n  labs(title = \"Accessibility Trend (2025-2029)\",\n       x = \"Year\",\n       y = \"Mean Accessibility Score\") +\n  scale_x_continuous(breaks = 2025:2029) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Print the data\nprint(yearly_trends)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Alternative: If you want to create a single dataset with all years\n# This assumes all hex datasets have the same spatial units\ncombined_data <- hex_KD2SFCA_2025 %>%\n  st_drop_geometry() %>%\n  select(sz, REGION_N) %>%\n  bind_cols(\n    accessibility_2025 = hex_KD2SFCA_2025$aac_KD2SFCA_2025,\n    accessibility_2026 = hex_KD2SFCA_2026$aac_KD2SFCA_2026,\n    accessibility_2027 = hex_KD2SFCA_2027$aac_KD2SFCA_2027,\n    accessibility_2028 = hex_KD2SFCA_2028$aac_KD2SFCA_2028,\n    accessibility_2029 = hex_KD2SFCA_2029$aac_KD2SFCA_2029\n  ) %>%\n  pivot_longer(cols = starts_with(\"accessibility_\"),\n               names_to = \"year\",\n               values_to = \"accessibility\") %>%\n  mutate(year = as.numeric(str_extract(year, \"\\\\d{4}\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Plot trends by region\nggplot(combined_data, aes(x = year, y = accessibility, color = REGION_N)) +\n  stat_summary(fun = mean, geom = \"line\", size = 1.2) +\n  stat_summary(fun = mean, geom = \"point\", size = 2) +\n  labs(title = \"Accessibility Trends by Region (2025-2029)\",\n       x = \"Year\",\n       y = \"Mean Accessibility Score\",\n       color = \"Region\") +\n  scale_x_continuous(breaks = 2025:2029) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n:::\n\n\n\n\nclip by regions\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n\n# change to tm_animation, dont label the sz\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Simpler version with cleaner layer names\ntmap_options(check.and.fix = TRUE)\ntmap_mode(\"plot\")\n\n# Base layers\nbase_map <- tm_shape(mpsz, bbox = map_ex) +\n  tm_fill(col = \"gray90\", border.col = \"white\", border.lwd = 0.3, alpha = 0.3) +\n  tm_shape(aac_sf) +\n  tm_symbols(size = 0.05, col = \"pink\", alpha = 0.8)\n\n# Add accessibility layers for each year\naccessibility_layers <- \n  tm_shape(hex_KD2SFCA_2025, bbox = map_ex) + \n  tm_fill(col = \"aac_KD2SFCA_2025\", n = 10, style = \"quantile\", \n          alpha = 0.7, title = \"2025\", group = \"2025\") +\n  \n  tm_shape(hex_KD2SFCA_2026, bbox = map_ex) + \n  tm_fill(col = \"aac_KD2SFCA_2026\", n = 10, style = \"quantile\", \n          alpha = 0.7, title = \"2026\", group = \"2026\") +\n  \n  tm_shape(hex_KD2SFCA_2027, bbox = map_ex) + \n  tm_fill(col = \"aac_KD2SFCA_2027\", n = 10, style = \"quantile\", \n          alpha = 0.7, title = \"2027\", group = \"2027\") +\n  \n  tm_shape(hex_KD2SFCA_2028, bbox = map_ex) + \n  tm_fill(col = \"aac_KD2SFCA_2028\", n = 10, style = \"quantile\", \n          alpha = 0.7, title = \"2028\", group = \"2028\") +\n  \n  tm_shape(hex_KD2SFCA_2029, bbox = map_ex) + \n  tm_fill(col = \"aac_KD2SFCA_2029\", n = 10, style = \"quantile\", \n          alpha = 0.7, title = \"2029\", group = \"2029\")\n\n# Combine and display\nfinal_map <- base_map + accessibility_layers +\n  tm_layout(main.title = \"Accessibility Trends (2025-2029)\",\n            main.title.size = 1.2) +\n  tm_view(view.legend.position = c(\"right\", \"top\"))\n\nfinal_map\n```\n:::\n\n\n\n### Analysis of Spatial Accessibility to Active Ageing Centres in Singapore (2025-2029)\n\nThis analysis reveals systematic temporal and spatial variations in accessibility to Active Ageing Centres (AAC) across Singapore's planning areas between 2025 and 2029. Using the Kernel Density Two-Step Floating Catchment Area (KD2SFCA) method to calculate the accessibility scores, it demonstrate a consistent downward trajectory from 2025 to 2029, with maximum accessibility values declining from 0.038119 in 2025 to 0.037128 in 2029, representing a 2.6% reduction in peak accessibility.\n\nThe spatial distribution of accessibility exhibits persistent geographic stratification throughout the observation period. Central Regions consistently demonstrate the highest accessibility scores, indicated by the dark brown coloration on the quantile classification scale. This core accessibility zone encompasses the Central Business District and adjacent residential areas, reflecting the concentration of active ageing infrastructure in Singapore's urban core. However, as mentioned earlier, the Central Region contains the most number of observation at 37%. Hence, the national average accessibility scores may be inflated due to the large observations in the Central Region.\n\nThe West Region, particularly Jurong West and Jurong East, maintain elevated accessibility levels across all years, suggesting robust provision of active ageing services in these mature new towns. Conversely, peripheral planning areas demonstrate consistently lower accessibility scores, particularly in the northern and northeastern territories. These areas, represented by lighter color classifications, indicate structural limitations in access to active ageing centres that persist throughout the projection period. The eastern planning areas of Bedok and Tampines show moderate to high accessibility, reflecting the presence of regional active ageing facilities serving these populations. The temporal analysis reveals that while absolute accessibility scores decline across all geographic areas, the relative spatial hierarchy remains stable. This suggests that the observed accessibility reduction affects all areas proportionally rather than creating new patterns of spatial inequality. The consistent color gradients across the five-year period indicate that existing accessibility disparities to active ageing services are maintained rather than ameliorated. The decline in accessibility scores across all planning areas indicates that Singapore's rapidly aging population is outpacing the expansion of active ageing centre capacity. This trend has significant implications for successful aging in place, as residents in already underserved peripheral areas face compounding challenges in accessing community-based aging support services. The persistence of spatial accessibility patterns suggests that current active ageing infrastructure planning may inadequately address geographic disparities in service provision for the elderly population. These findings indicate that Singapore's active ageing centre accessibility exhibits both temporal deterioration and spatial stratification, with implications for equitable aging support across the island's diverse planning areas. The maintenance of geographic accessibility hierarchies throughout the study period suggests that structural factors governing active ageing centre distribution require systematic intervention to address persistent spatial inequalities in aging infrastructure provision.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Simplified version with just essential trend analysis\nhex_accessibility_trends <- hex_KD2SFCA_2025 %>%\n  select(hex_id, sz, REGION_N, geometry, aac_KD2SFCA_2025) %>%\n  \n  # Join all years\n  left_join(hex_KD2SFCA_2026 %>% st_drop_geometry() %>% \n            select(hex_id, aac_KD2SFCA_2026), by = \"hex_id\") %>%\n  left_join(hex_KD2SFCA_2027 %>% st_drop_geometry() %>% \n            select(hex_id, aac_KD2SFCA_2027), by = \"hex_id\") %>%\n  left_join(hex_KD2SFCA_2028 %>% st_drop_geometry() %>% \n            select(hex_id, aac_KD2SFCA_2028), by = \"hex_id\") %>%\n  left_join(hex_KD2SFCA_2029 %>% st_drop_geometry() %>% \n            select(hex_id, aac_KD2SFCA_2029), by = \"hex_id\") %>%\n  \n  # Key trend metrics only\n  mutate(\n    change_2025_2026 = aac_KD2SFCA_2026 - aac_KD2SFCA_2025,\n    change_2026_2027 = aac_KD2SFCA_2027 - aac_KD2SFCA_2026,\n    change_2027_2028 = aac_KD2SFCA_2028 - aac_KD2SFCA_2027,\n    change_2028_2029 = aac_KD2SFCA_2029 - aac_KD2SFCA_2028,\n    \n    total_change_5yr = aac_KD2SFCA_2029 - aac_KD2SFCA_2025,\n    avg_annual_change = total_change_5yr / 4,\n    \n    trend_direction = case_when(\n      total_change_5yr > 0.001 ~ \"Increasing\",\n      total_change_5yr < -0.001 ~ \"Decreasing\", \n      TRUE ~ \"Stable\"\n    )\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# First, let's check for duplicates and clean the data\ncheck_duplicates <- function(data, year) {\n  dupes <- data %>% \n    st_drop_geometry() %>%\n    group_by(hex_id) %>% \n    summarise(count = n()) %>% \n    filter(count > 1)\n  \n  if(nrow(dupes) > 0) {\n    cat(\"Year\", year, \"has\", nrow(dupes), \"duplicate hex_ids\\n\")\n  }\n  return(dupes)\n}\n\n# Check each dataset for duplicates\ncheck_duplicates(hex_KD2SFCA_2025, 2025)\ncheck_duplicates(hex_KD2SFCA_2026, 2026)\ncheck_duplicates(hex_KD2SFCA_2027, 2027)\ncheck_duplicates(hex_KD2SFCA_2028, 2028)\ncheck_duplicates(hex_KD2SFCA_2029, 2029)\n```\n:::\n\n\n\n# Results\n\nSingapore has unequal accessibility to Active Ageing Centres for seniors age above 60. In Fig x, it indicates that the accessbility of each area. Dark areas indicate high accessibility whereas lighter areas indicate low accessibility. High accessibility relates to the convenience for seniors in the area to reach the AAC while low accessibility relates to less convenience for the seniors in the area to reach the AAC.\n\nIF BELOW AVERAGE,\n\n## Comparing accessbility between regions\n\n# Discussion\n\nNotably, Ministry of Health & Ministry of National Development are rolling a new initiative where AACs will conduct activities in nearby communal spaces or semi-permanent facilities, such AAC services is expected to bring close to more than 20,000 seniors (MOH, 2025).\n\n## Improving Spatial Equity\n\nconduct test of ddiferences\n\n## Sensemaking\n\n\n\n\n\n# References\n\nMOH. (2025). IMPROVING ACCESS TO ACTIVE AGEING ACTIVITIES AND SENIOR-FRIENDLY INFRASTRUCTURE. Retrieved 2nd april from https://www.moh.gov.sg/newsroom/improving-access-to-active-ageing-activities-and-senior-friendly-infrastructure\n",
    "supporting": [
      "analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}