[
  {
    "objectID": "about.html#about-the-author.",
    "href": "about.html#about-the-author.",
    "title": "about",
    "section": "",
    "text": "Hello there! Welcome to my portfolio! :)\nI’m  Joshua TING\nA Master of IT in Business (Analytics) student with Singapore Management University\nBefore pursuing my Master’s degree, I worked as a healthcare professional in a restructured hospital. Prior to that, I obtained a Bachelor of Science in Nursing from the Singapore Institute of Technology through their university Scholars’ Programme.\nConnect with Me:\n  \nBack to Home:"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Accessibility of Eldercare Service In Singapore: A Geospatial Analysis",
    "section": "",
    "text": "Hello! Welcome to my Page!\nThis website is crafted in Partial Fulfillment of the Requirements for the Capstone Project Module in the Master in IT in Business (MITB) Programme at the Singapore Management University under the esteemed guidance of A/Prof KAM Tin Seong.\nMotivation in Undertaking Capstone\nInspired by the pioneering work of John Snow in epidemiology, whose spatial mapping of cholera outbreaks in the 1850s revolutionized disease tracking, I aim to apply geospatial principles to contemporary challenges, using spatial data to analyze patterns, uncover insights, and contribute to more informed decision-making in fields like public health and beyond, especially with the rise of infectious diseases.\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "about author.",
    "section": "",
    "text": "Hello there! Welcome to my portfolio! :)\nI’m  Joshua TING\nA Master of IT in Business (Analytics) student with Singapore Management University\nBefore pursuing my Master’s degree, I worked as a healthcare professional in a restructured hospital. Prior to that, I obtained a Bachelor of Science in Nursing from the Singapore Institute of Technology through their university Scholars’ Programme.\nConnect with Me:"
  },
  {
    "objectID": "methodology/data_preview.html",
    "href": "methodology/data_preview.html",
    "title": "Data Preview",
    "section": "",
    "text": "In this section, the methodology will be explained thereafter Exploratory Data Analysis will be done."
  },
  {
    "objectID": "methodology/data_preview.html#data-acquisition",
    "href": "methodology/data_preview.html#data-acquisition",
    "title": "Data Preview",
    "section": "3.1 Data Acquisition",
    "text": "3.1 Data Acquisition\n3 main spectrum of data will be required for this research, namely the Population Data, Master Plan 2019 Subzone boundary and Care Centres.\n\n\n\nFigure x: Data Overview\n\n\n\n3.1.1 WebScraping of Care Centres\nDue to the lack of a centralised data of all care centres, web scarping is warranted in obtaining the information of the care centres. The geographical locations of the Care Centres alongside the centre names such as Active Ageing Centre, Day Care, Community Rehabilitation Centre, Centre-based Nursing were extracted using a web scraping tool, Web Scraper, available in Chrome web store as Seen in Figure x. As there is no centralised file that consist of the centre names and their locations, the location of each centre has to be manually extracted from the Care Services webpage of the Agency of Integrated Care as seen in Figure x.\n\n3.1.1.1 Step 0: Download Web Scraper from Chrome web store\nWeb Scraper is used as it is free, works reasonably well and available in both Chrome and Firefox web store. In the below steps, Chrome will be the default web browser used.\n\n\n\nFigure x: Web Scraper\n\n\n\n\n3.1.1.2 Step 1: Navigate to Developer Tools in Chrome Web Browser\nAfter downloading the extension from Chrome Web Store, press onto the menu bar at the right of the browser and locate Developer Tools while onto the website you would like to scrape information from.\n\n\n\nFigure x: Web Scraper\n\n\n\n\n3.1.1.3 Step 2: Interface for Webscraper\nAfter clicking onto Developer Tools, click onto the Web Scraper in the menu bar (in black). Following which the below interface will appear.\n\n\n\n3.1.1.4 Step 3: Create New Sitemap\nClick onto “create new sitemap”, thereafter “Create Sitemap”. Sitemap Name will be the overarching term used for these information; in this instance, it will be AAC. The Start URL will be the HTML link that you would like the information to be scraped from.\n\n\n\nFigure x:\n\n\n\n\n3.1.1.5 Step 4: Add New Selector\nAfter creating a new sitemap, the following interface will appear. Click onto the “Add new selector” to select the information to scrape.\n\n\n\nFigure x:\n\n\n\n\n3.1.1.6 Step 5: Selecting Whole Box\nFirstly, the id will be the column name. For Type, select Element Attribute from the drop down selection. Thereafter, press on Select under Selector and select two boxes of each centre as seen in the figure below (the remaining boxes will be highlighted through its intelligent function) and press onto Done Selecting in the green box.\n\n\n\nFigure x:\n\n\n\n\n3.1.1.7 Step 6: Sitemap Interface\nAfter adding a new selector, the sitemap page will appear the selector that you’ve inputted.\n\n\n\nFigure x: Step 6 - Create New Sitemap\n\n\n\n\n3.1.1.8 Step 7: Selecting Name of Care Centre\nFirstly, the id will be name (with reference to the name of care centre), serving as the column name. Text will be chosen under Type thereafter press Select under Selector and highlight the first 2 names of the care centres (The remaining care centres will be highlighted through its intelligent function) and press onto Done selecting in the green box. Multiple box will be selected as we would like to scrap multiple names and root parent selector will be root and press onto Save Selector.\n\n\n\nFigure x: Step 7 - Selecting Name of Care Centre\n\n\n\n\n3.1.1.9 Step 8: Create New Sitemap\nA popup window will be prompted and Group selectors was selected.\n\n\n\nFigure x: Step 8 - Create New Sitemap\n\n\n\n\n3.1.1.10 Step 9: Selecting Address of Care Centre\nSimilar to Step 7, the id will be address. Text will be chosen under Type thereafter press Select under Selector and highlight the first 2 addresses of the care centres (Remaining addresses will be highlighted through its intelligent function) and press onto Done selecting in the green box. Multiple box will be selected as we would like to scrap multiple addresses and parent selector will be wrapper_for_main_name (as we grouped selectors in step 8) and press onto Save Selector.\n\n\n\nFigure x: Step 9 - Selecting Address of Care Centre\n\n\n\n\n3.1.1.11 Step 10: Data Preview\nPrior to data scraping, the data is previewed in ensuring each name of the care centre is correctly tagged to the address using the main website to verify.\n\n\n\nFigure x: Step 10 - Data Preview\n\n\n\n\n3.1.1.12 Step 11: Commence Scraping\nHead over to sitemap aac and click onto Scrape. A new browser will appear indicating that it is in process of scraping. It will be closed automatically once the process has ended.\n\n\n\nFigure x: Step 11 - Commence Scraping\n\n\n\n\n3.1.1.13 Step 11: Export Data\nExport data is selected upon clicking sitemap aac. 2 file options are offered: csv and xlsx. The former was chosen as CSV files are simple and portable which doesn’t complicate data processing. Thereafter the data will be downloaded.\n\n\n\nFigure x:\n\n\n\n\n3.1.1.14 Step 11: View CSV File\nIn ensuring the web scraping successful and accurate, the csv. file is opened and viewed.\n\n\n\nFigure x: Step 11 - View CSV File\n\n\nThe above steps were repeated for each care centre."
  },
  {
    "objectID": "methodology/data_preview.html#importing-data",
    "href": "methodology/data_preview.html#importing-data",
    "title": "Data Preview",
    "section": "3.2 Importing Data",
    "text": "3.2 Importing Data\n\n3.2.1 Importing Geospatial Data\n\n3.2.1.1 Singapore’s Master Plan 2019 Subzone Boundary\n\n\nCode Chunk\nmpsz = st_read(dsn = \"data/subzone/masterplansubzone/\",\n               layer = \"MP14_SUBZONE_NO_SEA_PL\")\n\n\n\n\nCode Chunk\nmppa &lt;- st_read(\"data/planningarea/MasterPlan2019PlanningAreaBoundaryNoSea.kml\")\n\n\n\n\n3.2.1.2 Care Centres\n\n\nCode Chunk\naac &lt;- read_csv(\"data/carecentre/activeageingcentre.csv\") %&gt;%\n\n\n\n\nCode Chunk\nnursing &lt;- read_csv(\"data/carecentre/centrebasednursing.csv\")\n\n\n\n\nCode Chunk\nrehab &lt;- read_csv(\"data/carecentre/communityrehabcentre.csv\")\n\n\n\n\nCode Chunk\ncounselling &lt;- read_csv(\"data/carecentre/counselling.csv\")\n\n\n\n\nCode Chunk\ndaycare &lt;- read_csv(\"data/carecentre/daycare.csv\")\n\n\n\n\nCode Chunk\nhospice &lt;- read_csv(\"data/carecentre/dayhospice.csv\")\n\n\n\n\nCode Chunk\ndementia &lt;- read_csv(\"data/carecentre/dementia.csv\")\n\n\n\n\nCode Chunk\nmaintenance &lt;- read_csv(\"data/carecentre/maintenancedaycare.csv\")\n\n\n\n\nCode Chunk\nnhrespite &lt;- read_csv(\"data/carecentre/nhrespite.csv\")\n\n\n\n\nCode Chunk\nnursinghome &lt;- read_csv(\"data/carecentre/nursinghome.csv\")\n\n\n\n\n\n3.2.2 Importing Aspatial Data\n\n\nCode Chunk\npopdata2020 &lt;- read_csv(\"data/popdata/respopagesex2024.csv\")\n\n\n\n\nCode Chunk\npopdata2020 &lt;- read_csv(\"data/popdata/respopagesex2023.csv\")\n\n\n\n\nCode Chunk\npopdata2020 &lt;- read_csv(\"data/popdata/respopagesex2022.csv\")\n\n\n\n\nCode Chunk\npopdata2020 &lt;- read_csv(\"data/popdata/respopagesex2021.csv\")\n\n\n\n\nCode Chunk\npopdata2020 &lt;- read_csv(\"data/popdata/respopagesex2011to2020.csv\")\n\n\n\n\n3.2.3 Cursory View\n\n\nCode Chunk\nglimpse(\"\")\n\n\n\n\n3.2.4 Checking for Missing Values\n\n\n3.2.5 Duplicate Check\nThe code chunk below identifies all rows in the dataframe that have an exact duplicate (i.e., another row with the same values in all columns) using group_by_all().\n\n\nCode Chunk\nduplicate &lt;- cbn %&gt;% \n  group_by_all() %&gt;% \n  filter(n()&gt;1) %&gt;% \n  ungroup()\n  \nduplicate\n\n\nThe results returned 0 duplicated records."
  },
  {
    "objectID": "methodology/data_preview.html#data-manipulation",
    "href": "methodology/data_preview.html#data-manipulation",
    "title": "Data Preview",
    "section": "3.3 Data Manipulation",
    "text": "3.3 Data Manipulation\n\n3.3.1 Seperating postal code from address\n\n\nCode Chunk\nlibrary(tidyverse)\nlibrary(stringr)\n\n# Active Ageing Centre\naac &lt;- read_csv(\"data/carecentre/activeageingcentre.csv\")\naac &lt;- mutate(aac, \n  postal_code = str_extract(address, \"[0-9]{6}$\"),\n  address = str_remove(address, \"[,]?\\\\s*[0-9]{6}$\")\n)\n\n# Centre Based Nursing\nnursing &lt;- read_csv(\"data/carecentre/centrebasednursing.csv\")\nnursing &lt;- mutate(nursing,\n  postal_code = str_extract(address, \"[0-9]{6}$\"),\n  address = str_remove(address, \"[,]?\\\\s*[0-9]{6}$\")\n)\n\n# Community Rehab Centre\nrehab &lt;- read_csv(\"data/carecentre/communityrehabcentre.csv\")\nrehab &lt;- mutate(rehab,\n  postal_code = str_extract(address, \"[0-9]{6}$\"),\n  address = str_remove(address, \"[,]?\\\\s*[0-9]{6}$\")\n)\n\n# Counselling\ncounselling &lt;- read_csv(\"data/carecentre/counselling.csv\")\ncounselling &lt;- mutate(counselling,\n  postal_code = str_extract(address, \"[0-9]{6}$\"),\n  address = str_remove(address, \"[,]?\\\\s*[0-9]{6}$\")\n)\n\n# Daycare\ndaycare &lt;- read_csv(\"data/carecentre/daycare.csv\")\ndaycare &lt;- mutate(daycare,\n  postal_code = str_extract(address, \"[0-9]{6}$\"),\n  address = str_remove(address, \"[,]?\\\\s*[0-9]{6}$\")\n)\n\n# Day Hospice\nhospice &lt;- read_csv(\"data/carecentre/dayhospice.csv\")\nhospice &lt;- mutate(hospice,\n  postal_code = str_extract(address, \"[0-9]{6}$\"),\n  address = str_remove(address, \"[,]?\\\\s*[0-9]{6}$\")\n)\n\n# Dementia\ndementia &lt;- read_csv(\"data/carecentre/dementia.csv\")\ndementia &lt;- mutate(dementia,\n  postal_code = str_extract(address, \"[0-9]{6}$\"),\n  address = str_remove(address, \"[,]?\\\\s*[0-9]{6}$\")\n)\n\n# Maintenance Daycare\nmaintenance &lt;- read_csv(\"data/carecentre/maintenancedaycare.csv\")\nmaintenance &lt;- mutate(maintenance,\n  postal_code = str_extract(address, \"[0-9]{6}$\"),\n  address = str_remove(address, \"[,]?\\\\s*[0-9]{6}$\")\n)\n\n# NH Respite\nnhrespite &lt;- read_csv(\"data/carecentre/nhrespite.csv\")\nnhrespite &lt;- mutate(nhrespite,\n  postal_code = str_extract(address, \"[0-9]{6}$\"),\n  address = str_remove(address, \"[,]?\\\\s*[0-9]{6}$\")\n)\n\n# Nursing Home\nnursinghome &lt;- read_csv(\"data/carecentre/nursinghome.csv\")\nnursinghome &lt;- mutate(nursinghome,\n  postal_code = str_extract(address, \"[0-9]{6}$\"),\n  address = str_remove(address, \"[,]?\\\\s*[0-9]{6}$\")\n)\n\n\n\n\n3.3.2 Labelling each dataset appropriately\n\n\nCode Chunk\naac &lt;- aac %&gt;%\n  mutate(label = \"aac\")\n\n\n\n\n3.3.3 Apend all Care Centres into one dataset\n\n\nCode Chunk\ncc_data &lt;- bind_rows(\n  aac, \n  nursing, \n  rehab, \n  counselling, \n  daycare, \n  hospice, \n  dementia, \n  maintenance, \n  nhrespite, \n  nursinghome\n)\n\n# Optional: view the combined dataset structure\nstr(all_data)\n\n\neach data has set adddress column with data like this 10 Tampines Street 62, 528519. i want to extra the last 6 digits from the right and make it to another column named “postal_code”. do it for every dateset and row. give me the r code"
  }
]